apiVersion: apps/v1
kind: Deployment
metadata:
{{- include "metadata" . |nindent 2}}
spec:
  replicas: {{ .Values.instances | default "1" }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
{{- include "metadata" . | nindent 6}}
    spec:
      containers:
    {{- range .Values.process }}
        - name: {{ .type }}
          command:
          {{- range .command }}
            - {{ . | toYaml }}
          {{- end }}
          env:
          {{- range $k,$v:=$.Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- range $.Values.service}}
            {{- range $kp,$kv:= .parameters}}
            - name: {{ printf "SERVICE__%s__%s" $.Values.name $kp | upper}}
              value: {{ $kv | quote}}
            {{- end }}
          {{- end }}
          image: {{ $.Values.docker.image }}
          ports:
            - name: {{ .type }}
              containerPort: {{ dig "SERVER_PORT" "" $.Values.env }}
          livenessProbe:
            {{- $url:= urlParse (printf "http://%s" .healthCheck.endpoint) }}
            {{- $port:= (regexSplit ":" $url.host -1 | last)}}
            httpGet:
              path: {{ $url.path |quote }}
              {{- if $port }}
              port: {{ $port }}
              {{- end }}
          readinessProbe:
            {{- $url:= urlParse (printf "http://%s" .readinessCheck.endpoint) }}
            {{- $port:= (regexSplit ":" $url.host -1 | last)}}
            httpGet:
              path: {{ $url.path |quote }}
              {{- if $port }}
              port: {{ $port }}
              {{- end -}}
          {{- if .memory }}
          resources:
            requests:
              memory: {{ .memory }}
              cpu: 100m
          {{- end }}
    {{- end }}