apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  {{- if .Values.space }}
  namespace: {{ .Values.space }}
  {{- end }}
  labels:
    {{-  .Values.labels | nindent 4 }}
  annotations:
    {{-  .Values.annotations | nindent 4 }}
    {{- if .Values.stack }}
    "stack": {{ .Values.stack | quote }}
    {{- end }}
spec:
  {{- if .Values.instances }}
  replicas: {{ .Values.instances }}
  {{- end }}
  template:
    metadata:
    labels:
      {{-  .Values.labels | nindent 8 }}
    annotations:
      {{-  .Values.annotations | nindent 8 }}
    spec:
      containers:
    {{- range .Values.process }}
        - name: {{ .type }}
          command: [{{ .command | toStrings}}]
          env:
          {{- range .Values.service}}
            {{- range $kp,$kv:= range .parameters}}
             {{- printf "SERVICE__%s__%s" .name $kv| upper" | nident 12 }}: {{ $kv}}
            {{- end }}
          {{- end }}
          image: "{{ .Values.docker.image }}"
          ports:
            - name: {{ .name}}
              containerPort: {{ dig "SERVER_PORT" .Values.env }}
          livenessProbe:
            {{ $url:= urlParse (printf "%http://%s" .healthCheck.endpoint)}}
            httpGet:
              path: {{- $url.path }}
              port: {{- $url.port }}
          readinessProbe:
            {{ $url:= urlParse (printf "%http://%s" .readinessCheck.endpoint)}}
            httpGet:
              path: {{- $url.path }}
              port: {{- $url.port }}
          {{- if .memory }}
          resources:
            requests:
              memory: {{- .memory }}
          {{- end }}
    {{- end }}